apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.gregcockroft'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 2
        versionName "2.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        sourceSets.test.resources.srcDirs += ["src/main"]
        multiDexEnabled true
        externalNativeBuild {
            cmake {
                arguments "-Dcdep-dependencies_DIR=../../../.cdep/modules"
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            // let gradle pack the shared library into apk
            jniLibs.srcDirs = ['../distribution/gperf/lib']
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'junit:junit:4.13.2'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.test.ext:junit:1.1.2'
    implementation 'androidx.test:rules:1.3.0'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

// This pulls in freetype. Dependencies are in cdep.yml
// This only needs to run once but is being run before every build right now so that gradle command line builds will work

task runcdep(type:Exec) {
    commandLine './cdep'
}

preBuild.dependsOn(runcdep)


// For Android Studio this needs to be run once from the command line
//
//  cd mathdisplaylib
//  ./cdep

